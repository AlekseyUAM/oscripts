#Использовать gitrunner
#Использовать 1commands

Процедура Синхронизация() 

	Сообщить("Запуск " + ТекущаяДата());

	ГитРепозиторий = Новый ГитРепозиторий();
	ГитРепозиторий.УстановитьРабочийКаталог(ТекущийКаталог());

	Контекст = Новый Структура;
	Контекст.Вставить("ИмяВетки", АргументыКоманднойСтроки[0]);
	Контекст.Вставить("НомерВерсии", Формат(АргументыКоманднойСтроки[1], "ЧГ=0"));
	Контекст.Вставить("ГитРепозиторий", ГитРепозиторий);

	Попытка
		ПодготовкаРепозитория(Контекст);
		СинхронизироватьХранилище(Контекст);
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;	

	// вернуться после выполнения

	Попытка
		ПерейтиВВеткуМастер(Контекст.ГитРепозиторий);	
	Исключение
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	Сообщить("Завершено " + ТекущаяДата());

КонецПроцедуры

Процедура ПодготовкаРепозитория(Контекст)

	ГитРепозиторий = Контекст.ГитРепозиторий;

	ПерейтиВВеткуМастер(ГитРепозиторий);
	ГитРепозиторий.Получить("origin", "master");

	Если НЕ ВеткаСуществует(Контекст.ИмяВетки) Тогда		
		ГитРепозиторий.СоздатьВетку(Контекст.ИмяВетки);
	КонецЕсли;
	
	ГитРепозиторий.ПерейтиВВетку(Контекст.ИмяВетки);

КонецПроцедуры

Функция ВеткаСуществует(ИмяВетки)

	Команда = Новый Команда;

	Команда.УстановитьКоманду("git");
	Команда.ДобавитьПараметр("rev-parse");	
	Команда.ДобавитьПараметр("--verify");
	Команда.ДобавитьПараметр(ИмяВетки);

	КодВозврата = Команда.Исполнить();
	Возврат КодВозврата = 0;	

КонецФункции

Процедура ПерейтиВВеткуМастер(ГитРепозиторий)
	
	Если ГитРепозиторий.ПолучитьТекущуюВетку() <> "master" Тогда		
		ГитРепозиторий.ПерейтиВВетку("master");
	КонецЕсли;

КонецПроцедуры

Процедура СинхронизироватьХранилище(Контекст)

	Сообщить("Выполняем синхронизацию");

	Команда = Новый Команда;

	Команда.УстановитьКоманду("gitsync");
	Команда.ДобавитьПараметр("sync");	
	Команда.ДобавитьПараметр("-u gitsync");
	Команда.ДобавитьПараметр("-p gitsync");
	Команда.ДобавитьПараметр("--minversion " + Контекст.НомерВерсии);
	Команда.ДобавитьПараметр("--maxversion " + Контекст.НомерВерсии);
	Команда.ДобавитьПараметр("--push");
	Команда.ДобавитьПараметр("/home/uam/projects/full_test_crs");
	Команда.ДобавитьПараметр("src/cf");
	Команда.ДобавитьПараметр("ssh://git@localhost:10022/UAM/full_test.git");

	КодВозврата = Команда.Исполнить();
	Сообщить(Команда.ПолучитьВывод());

КонецПроцедуры 

Синхронизация();